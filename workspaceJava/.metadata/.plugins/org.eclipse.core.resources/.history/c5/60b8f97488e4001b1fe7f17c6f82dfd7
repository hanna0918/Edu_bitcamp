import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class SelectTest {

	public SelectTest() {
		try {
			//1. JVM에 jdbc드라이브 로딩
			Class.forName("oracle.jdbc.driver.OracleDriver");
		}catch(ClassNotFoundException cnfe) {
			System.out.println("jdbc 드라이브 로딩 실패 -->"+ cnfe.getMessage());
		}
		try {
			//2. DB연결
			//							@서버ip, localhost:port:전역데이터베이스변수
			String dbUrl = "jdbc:oracle:thin:@localhost:1521:xe";
			//											dbserver, 계정, 비번
			Connection conn = DriverManager.getConnection(dbUrl,"c##scott","tiger");
			
			System.out.println("왕한나");
			
			//3. 쿼리문을 만든다. "문자열"
//			String sql = "select empno, ename, job, to_char(hiredate,'YYYY-MM-DD'), sal, comm, deptno "
//						+ "from emp where sal>=? or job=? order by ename";		
			String sql = "select * from emp";
			
			//4. 쿼리문을 이용하여 PrepareStatement 객체 생성
			PreparedStatement pstmt = conn.prepareStatement(sql);
			// ? 를 셋팅
					
//			pstmt.setInt(1, 3000);
//			pstmt.setString(2, "세일맨");
			System.out.println("존나느려");
			//5. 쿼리문 실행하기
			ResultSet rs = pstmt.executeQuery();
			System.out.println("존나느123려");
			while(rs.next()) {
				//한줄의 레코드를 처리한다.	오라클 인덱스는 1부터 시작
			
				String empno = rs.getString(1);	// rs.getInt("empno");
				String ename = rs.getString(2); //rs.getString("ename");
				String job = rs.getString(3);	//rs.getString(3);
				String hiredate = rs.getString(4);
				String sal = rs.getString(5);	//소수점2자리까지
				String comm = rs.getString(6);
				String deptno = rs.getString(7);
				//야 모두 와일문 안에 있는 거 string으로 바꿔 긜고 rs.getStirng으로해 기달려봐 
				System.out.println(empno+ ", " + ename + ", " + job + ", "+ hiredate + ", "+ sal + ", "+ comm + ", "+ deptno);
				
				//////////////////////////////////////////////////
			}
			rs.close();
			pstmt.close();
			conn.close();
			
		}catch(SQLException se) {
			System.out.println("DB연결 에러 발생 -->"+se.getMessage());
		}
	}

	public static void main(String[] args) {
		new SelectTest();

	}

}
